<?php
/**
 * Ultimate_ModuleCreator extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT License
 * that is bundled with this package in the file LICENSE_UMC.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/mit-license.php
 *
 * @category   	Ultimate
 * @package		Ultimate_ModuleCreator
 * @copyright  	Copyright (c) 2012
 * @license		http://opensource.org/licenses/mit-license.php MIT License
 */ 
/**
 * help tab
 * 
 * @category	Ultimate
 * @package		Ultimate_ModuleCreator
 * @author 		Marius Strajeru <marius.strajeru@gmail.com>
 */
?>
<div class="entry-edit modulecretor-help">
	<div class="entry-edit">
		<div class="entry-edit-head collapseable">
			<a href="#" onclick="return toggleHelp(this, 'modulecreator_help_container')" class="open">
				<?php echo Mage::helper('modulecreator')->__('Help') ?>
			</a>
		</div>
		<div id="modulecreator_help_container" class="box custom-options">
			<strong><?php echo Mage::helper('modulecreator')->__('Ultimate Module Creator v%s', Mage::app()->getConfig()->getNode('modules/Ultimate_ModuleCreator/version'))?></strong><br />
			<strong><?php echo Mage::helper('modulecreator')->__('General description');?></strong>
			<p>
				<?php echo Mage::helper('modulecreator')->__('This extension generates the sourse code for a simple Magento extension.');?><br />
				<?php echo Mage::helper('modulecreator')->__('You can configure it to create back-end and frontend files.');?><br />
				<?php echo Mage::helper('modulecreator')->__('You can create one or more entities under the same extension.');?><br />
				<?php echo Mage::helper('modulecreator')->__('For each entity you can add one or more attributes/fields of different types.');?><br />
				<?php echo Mage::helper('modulecreator')->__('You can create tree-behaving entities.');?><br />
				<?php echo Mage::helper('modulecreator')->__('You can make relations between entities - many to many or one to many');?><br />
			</p>
		</div>
	</div>
</div>
<div class="entry-edit modulecretor-help">
	<div class="entry-edit">
		<div class="entry-edit-head collapseable">
			<a href="#" onclick="return toggleHelp(this, 'modulecreator_general_container')" class="open">
				<?php echo Mage::helper('modulecreator')->__('Settings') ?>
			</a>
		</div>
		<div id="modulecreator_general_container" class="box custom-options">
			<strong><?php echo Mage::helper('modulecreator')->__('Settings Tab');?></strong>
			<div>
				<strong><?php echo Mage::helper('modulecreator')->__('Fields');?></strong>
				<ul style="list-style-type: disc;padding-left:30px;">
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Namespace');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This is the folder name of your new extension. Your company name could go here. Use only letters and numbers. Start with a capital letter.');?><br />
							<?php echo Mage::helper('modulecreator')->__('You can change the default value from <a href="%s">System->Configuration->Module creator</a>->Settings->Default Namespace.', $this->getUrl('adminhtml/system_config/edit', array('section'=>'modulecreator')));?><br />
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Module name');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This is your extension name. Start with a capital letter.');?><br />
							<?php echo Mage::helper('modulecreator')->__('Here are some examples: "Article", "Testimonial", "Post".');?><br />
							<?php echo Mage::helper('modulecreator')->__('Try to use a noun in singular form.');?><br />
							<?php echo Mage::helper('modulecreator')->__('For security reasons you cannot name a module just like an existing one even in a different namespace: "Catalog", "Sales", "Checkout"...');?><br />
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Code pool');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This is the code folder in which your extension will be installed. If you don\'t know what goes here, choose "local"');?><br />
							<?php echo Mage::helper('modulecreator')->__('This Magento codepools are "local", "community" and "core" but you shouldn\'t touch the "core".');?><br />
							<?php echo Mage::helper('modulecreator')->__('You can change the default value from <a href="%s">System->Configuration->Module Creator</a>->Settings->Default Codepool.', $this->getUrl('adminhtml/system_config/edit', array('section'=>'modulecreator')));?>
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Action');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This allows you to create an archive with your extension located in var/modulecreator folder of your current instance so you can edit it later or install it later manually by copying the "app" folder in the archive over the "app" folder of your instance and the "skin" folder in the archive over the "skin" folder of your instance.');?><br />
							<?php echo Mage::helper('modulecreator')->__('You can change the default value from <a href="%s">System->Configuration->Module Creator</a>->Settings->Default Action.', $this->getUrl('adminhtml/system_config/edit', array('section'=>'modulecreator')));?><br />
							<?php echo Mage::helper('modulecreator')->__('If you choose to install it directly, backup your Mangeto instance first, just in case.')?><br />
							<?php if (Mage::helper('modulecreator')->isBetaRelease()) : ?>
								<strong><?php echo Mage::helper('modulecreator')->__('While in BETA version this is disabled. It\'s for your own safety.')?></strong><br />
							<?php endif;?>
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Frontend package');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This is the name of the design interface (package) of your mangento instance. If you don\'t know what goes here put "base".');?>
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Frontend theme - templates');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This is the name of the theme of your mangento instance for the template files. If you don\'t know what goes here put "default".');?>
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Frontend theme - layout');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This is the name of the theme of your mangento instance for the layout files. If you don\'t know what goes here put "default".');?>
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('License');?></strong>
						<br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('Added at the top of every generated file.');?><br />
							<?php echo Mage::helper('modulecreator')->__('Use {{Namespace}} as a placeholder for namespace, {{Module}} as a placeholder for the module name and {{Y}} as placeholder for current year.');?><br />
							<?php echo Mage::helper('modulecreator')->__('You can change the default value from <a href="%s">System->Configuration->Module Creator</a>->Settings->Default License.', $this->getUrl('adminhtml/system_config/edit', array('section'=>'modulecreator')));?>
						</p>
					</li>
					<li>
						<strong><?php echo Mage::helper('modulecreator')->__('Menu sort order');?></strong><br />
						<p>
							<?php echo Mage::helper('modulecreator')->__('This sets the position of your extension menu in the entire admin menu.');?><br />
							<?php echo Mage::helper('modulecreator')->__('You can see the order of the current menus by clicking the link under the field.');?><br />
							<?php echo Mage::helper('modulecreator')->__('or <a href="#" onclick="%s">here</a>', "showMenuOrder(0);return false;");?>
						</p>
					</li>
				</ul>
			</div>
		</div>
	</div>
</div>
<div class="entry-edit modulecretor-help">
	<div class="entry-edit-head collapseable">
		<a href="#" class="open" onclick="return toggleHelp(this, 'modulecreator_help_entities_container')"><?php echo Mage::helper('modulecreator')->__('Entities') ?></a>
	</div>
	<div id="modulecreator_help_entities_container" class="box custom-options">
		<p><?php echo Mage::helper('modulecreator')->__('To add a new entity click on "Add Entity"');?></p>
		<strong><?php echo Mage::helper('modulecreator')->__('Fields');?></strong>
		<ul style="list-style-type: disc;padding-left:30px;">
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Entity label - singular')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This is the label of the entity (noun) in singular form. It will appear all over the module. As an example, if you set this label to "Article", in the admin for you will see the button "Add Article"');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Entity label - plural')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This is the label of the entity (noun) in plural form. It will appear all over the module. As an example, if you set this label to "Article", in the admin for you will see the button "Delete Articles"');?>
					<?php echo Mage::helper('modulecreator')->__('This could have been autogenerated from the singular form, but it\'s safer if you input it manually.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Entity code - singular')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This is the code of the entity. It will be used in the code to make it more human readable. For example, if you put "article" here all variables related to your entity will be named $article or $_article. It is also used for naming some generated files.');?><br />
					<?php echo Mage::helper('modulecreator')->__('There are some naming restriction. For example the code cannot be: "resource", "setup", "adminhtml"');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Entity code - plural')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('Same as above. This is used for a list of entities. For example if you put here "articles" all your variables related to article lists will be names $articles or $_articles');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Behaves as tree')?></strong>
				<p>
					<?php echo Mage::helper('modulecreator')->__('If set to "Yes" then the entity will behave as a tree. Just like the product categories to. All the required columns will be added in the table (path, level, childred_count, parent_id).');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Add "Created at" to admin grid')?></strong><br />
				<strong><?php echo Mage::helper('modulecreator')->__('Add "Updated at" to admin grid')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('Each entity has a field called created_at and one called updated_at that remembers when the item was created and saved last. Setting these wo "Yes" will add these columns to the admin gird.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Add to admin global search')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('When using the global admin search Magento searches on products, customers and orders. This can make it search in your entities also.')?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Create API')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will create the files needed for the SOAP API for the custom entity.')?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Include "Status" field')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will add to your entity a "Status" field that will allow you to activate and deactivate the entities in the frontend. If you choose not to create the frontend files for your entity then is useless to set this to "Yes" but you can still do it.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Create frontend files')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This allows you to decide if you generate or not the frontend files for the entity.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Create entity list page')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This allows you to decide if you generate or not the frontend files for listing your entities.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Entity list page template')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('If you decide to create a list page of your entities you can set the main layout from here.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Create entity view page')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This allows you to decide if you generate or not the frontend files for viewing your entities.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Entity list page template')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('If you decide to create a view page of your entities you can set the main layout from here.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Add "SEO" attributes - title, description, keywords')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will add to your entity 3 attributes. "Meta title", "Meta Description" and "Meta Keywords" and the logic to use them in the entity pages.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Create RSS feed')?></strong>
				<br />
				<div>
					<?php echo Mage::helper('modulecreator')->__('This will create a new attribute for your entity called "Show in Feed" and will also create the logic for viewing your entities as RSS feeds.');?><br />
					<?php echo Mage::helper('modulecreator')->__('If this is enabled in the entity list page in front-end where will be a link to the RSS feed.');?><br />
					<?php echo Mage::helper('modulecreator')->__('A link to the entity RSS feed will also be added in the default Magento RSS list page.');?><br />
					<?php echo Mage::helper('modulecreator')->__('If you disable the RSS feeds in Magento this will also be disabled.');?>
					<br />
					<strong><?php echo Mage::helper('modulecreator')->__('Known issues:');?></strong>
					<ul style="list-style-type:square;padding-left:20px;">
						<li>
							<?php echo Mage::helper('modulecreator')->__('If you don\'t have a default Magento RSS feed enabled but you have enabled the one for your entity then in the RSS list page the message "There are no RSS feeds" will appear and below it the link to the RSS feed of your entity.');?>
							<br />
							<?php echo Mage::helper('modulecreator')->__('There is no way of avoiding this without overwriting core behavior');?>
						</li>
					</ul>
				</div>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Create Link/View widget')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will create the code that will allow you to include widgets of your entities in the static pages and static blocks.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Link "many to many" with products')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will allow you to link your entity to the products. It will add a new tab in the product edit form with your entities and a tab in the entity edit form with the product.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Show associated entities on product page')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will display the list of associated entities on the related product page. It may not be displayed if the design is not compatible but can be fixed from the layout xml of the entity.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Show associated product on entity page')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will display the list of associated products on the related entity page.');?>
				</p>
			</li>
		</ul>
		<strong><?php echo Mage::helper('modulecreator')->__('Entity fields');?></strong>
		<ul style="list-style-type: disc;padding-left:30px;">
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Attribute Label')?></strong><br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This is the attribute label that will be visible in the back-end in the add/edit form and in some cases in frontend.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Attribute Code')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This is the attribute code. It will be used in the logic of the extension. Use only letters (a-z), numbers (0-9) or underscore(_) in this field, first character should be a letter.');?><br />
					<?php echo Mage::helper('modulecreator')->__('There are some naming restriction. For example the code cannot be: "data", "child"');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Attribute Type')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This is the attribute type. You can choose from the available options: Text, Int, Decimal Textarea, Yes/No, Timestamp, File, Image, Website.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Position')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This sets the position of the attribute in the admin add/edit form.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Note')?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This will add a comment under the field in the admin add/edit form.');?>
				</p>
			</li>
		</ul>
		<strong><?php echo Mage::helper('modulecreator')->__('Additional data');?></strong>
		<br />
		<p>
			<?php echo Mage::helper('modulecreator')->__('Depending on the attribute type you can/must configure additional data.')?>
		</p>
		<ul style="list-style-type: disc;padding-left:30px;">
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Is name');?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('Each entity must have an attribute to behave as "Name". This attribute will be used to identify diffrent entitities among themselves. This option is available only for text attributes.');?>
					<br />
					<?php echo Mage::helper('modulecreator')->__('In the example above for the author entity you can add the attribute "name" to behave as name and for the testimonial entity you can add the attribute "title" to behave as name.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Is required');?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This sets the attribute as required in the admin add/edit form. Is available for all the attribute types.');?>
					<br />
					<?php echo Mage::helper('modulecreator')->__('The attribute set to behave as "Name" will be required by default.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Use WYSIWYG editor');?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This allows you to use a WYSIWYG editor for the attribute. It is available only for Textarea attributes.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Add in admin grid');?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This allows you to display the attribute as a column in the admin grid of the entity. Is available for attributes with type Text, Int, Decimal, Yes/No and Timestamp.');?>
					<br />
					<?php echo Mage::helper('modulecreator')->__('The attribute set to behave as "Name" will be included by default. Also the "Status" attribute if you choose to create one.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Show in frontend');?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This allows you to generate the code to show the attribute value in the frontend. Is available for all attribute types.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Display in widget');?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('The Module Creator also gives you the posibility to use any entity as a widget in the CMS pages and blocks. This allows you to include the attribute in the widget. Is available for all attribute types.');?>
				</p>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Display in rss feed');?></strong>
				<br />
				<p>
					<?php echo Mage::helper('modulecreator')->__('This allows you to include the attribute in the rss feed for the entity, if you chose to create one. Is available for all attribute types.');?>
				</p>
			</li>
		</ul>
	</div>
</div>
<div class="entry-edit modulecretor-help">
	<div class="entry-edit-head collapseable">
		<a href="#" class="open" onclick="return toggleHelp(this, 'modulecreator_help_relations_container')"><?php echo Mage::helper('modulecreator')->__('Relations') ?></a>
	</div>
	<div id="modulecreator_help_relations_container" class="box custom-options">
		<p>
			<?php echo Mage::helper('modulecreator')->__('This tab appears when you have 2 or more entities')?><br />
			<?php echo Mage::helper('modulecreator')->__('It allows you to create relations between entities.')?>
		</p>
		<strong><?php echo Mage::helper('modulecreator')->__('Relation types');?></strong>
		<ul>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('--None--')?> : </strong>
				<?php echo Mage::helper('modulecreator')->__('This means that there is no relation between your entities');?>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Is sibling with')?> : </strong>
				<?php echo Mage::helper('modulecreator')->__('This means that there is a many to many relation between your entities.');?><br />
				<?php echo Mage::helper('modulecreator')->__('If 2 entities are siblings then a new table will be created to hold the ids of the related entities');?>
				<strong style="color:red"><?php echo Mage::helper('modulecreator')->__('This type of relation cannot be set between 2 tree-bahaving entities.')?></strong>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Is parent for')?> : </strong>
				<?php echo Mage::helper('modulecreator')->__('This means that there is a one to many relation between your entities.');?><br />
				<?php echo Mage::helper('modulecreator')->__('A new column will be added in the child entity\'s table that will reference the parent entity.');?>
			</li>
			<li>
				<strong><?php echo Mage::helper('modulecreator')->__('Is child of')?> : </strong>
				<?php echo Mage::helper('modulecreator')->__('This means that there is a one to many relation between your entities but the other way around.');?>
				<?php echo Mage::helper('modulecreator')->__('A new column will be added in the child entity\'s table that will reference the parent entity.');?>
			</li>
		</ul>
	</div>
</div>
<script type="text/javascript">
	function toggleHelp(element, container){
		if ($(element).hasClassName('open')){
			$(container).hide();
			$(element).removeClassName('open');
			$(element).addClassName('closed');
		}
		else{
			$(container).show();
			$(element).removeClassName('closed');
			$(element).addClassName('open');
		}
		return false;
	}
</script>
